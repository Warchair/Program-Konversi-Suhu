{"version":3,"sources":["components/TemperatureInput.jsx","components/Konversi.jsx","img/kimia.png","App.js","index.js"],"names":["NamaSkala","c","f","r","k","TemperatureInput","props","handleChange","bind","e","this","onTemperatureChange","target","value","skala","temperature","class","className","onChange","Component","fromCelsius","Celsius","convert","F","R","K","fromReamur","Reamur","celsius","C","fromFahrenheit","Fahrenheit","fromKelvin","Kelvin","Converter","Suhu","input","parseFloat","Number","isNaN","output","Math","round","toString","Konversi","handleCelsiusChange","handleFahrenheitChange","handleReamurChange","handleKelvinChange","state","setState","hasilReamur","hasilFahrenheit","hasilCelsius","hasilKelvin","Main","src","kimia","alt","App","path","component","from","to","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.536ef8c9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst NamaSkala = {\r\n    c:'Celcius',\r\n    f:'Fahrenheit',\r\n    r:'Reamur',\r\n    k:'Kelvin'\r\n}\r\n\r\nclass TemperatureInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.props.onTemperatureChange(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        const skala = this.props.skala;\r\n        const temperature = this.props.temperature;\r\n        // console.log(temperature);\r\n        return (\r\n            <div>\r\n                <h5 class=\"mt-2\">Masukkan Suhu {NamaSkala[skala]}</h5>\r\n                <input className=\"form-control\" value={temperature} onChange={this.handleChange} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TemperatureInput;","import React, { Component} from 'react';\r\nimport TemperatureInput from './TemperatureInput';\r\n\r\nfunction fromCelsius(Celsius, skala) {\r\n    let fahrenheit = (9 / 5) * Celsius +  32;\r\n    let reamur = (4 / 5) * Celsius;\r\n    let kelvin = Celsius + 273;\r\n    const convert = { F:fahrenheit, R:reamur, K:kelvin};\r\n    if(skala === 'r') {\r\n        return convert.R;\r\n    } else if(skala === 'f') {\r\n        return convert.F;\r\n    }\r\n    else if(skala === 'k') {\r\n        return convert.K;\r\n    }\r\n}\r\n\r\nfunction fromReamur(Reamur,skala) {\r\n    let celsius = (5 / 4) * Reamur;\r\n    let fahrenheit = (9 / 4) * Reamur + 32;\r\n    let kelvin = celsius + 273;\r\n    const convert = { C:celsius, F:fahrenheit, K:kelvin};\r\n    if(skala === 'f') {\r\n        return convert.F;\r\n    } else if(skala === 'c') {\r\n        return convert.C;\r\n    } \r\n    else if(skala === 'k') {\r\n        return convert.K;\r\n    }\r\n}\r\n\r\nfunction fromFahrenheit(Fahrenheit,skala) {\r\n    let celsius = 5 / 9 * (Fahrenheit - 32);\r\n    let reamur = 4 / 9 * (Fahrenheit - 32);\r\n    let kelvin = celsius + 273;\r\n    const convert = { C:celsius, R:reamur, K:kelvin };\r\n    if(skala === 'r') {\r\n        return convert.R;\r\n    } else if(skala === 'c') {\r\n        return convert.C;\r\n    }\r\n    else if(skala === 'k') {\r\n        return convert.K;\r\n    }\r\n}\r\n\r\nfunction fromKelvin(Kelvin,skala) {\r\n    let celsius = Kelvin - 273;\r\n    let reamur = 4 / 5 * (Kelvin - 273);\r\n    let fahrenheit = 9 / 5 * (Kelvin - 273) + 32;\r\n    const convert = {C:celsius, R:reamur, F:fahrenheit };\r\n    if(skala === 'r') {\r\n        return convert.R;\r\n    } else if(skala === 'c') {\r\n        return convert.C;\r\n    } else if(skala === 'f') {\r\n        return convert.F;\r\n    }\r\n}\r\n\r\nfunction Converter(temperature, Suhu, skala) {\r\n    const input = parseFloat(temperature);\r\n    if(Number.isNaN(input)) {\r\n        return '';\r\n    }\r\n    const output = Suhu(input, skala);\r\n    const rounded = Math.round(output * 1000) / 1000;\r\n    return rounded.toString();\r\n}\r\n\r\n\r\nclass Konversi extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\r\n        this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\r\n        this.handleReamurChange = this.handleReamurChange.bind(this);\r\n        this.handleKelvinChange = this.handleKelvinChange.bind(this);\r\n        this.state = {temperature:'', skala:'c'};\r\n    }\r\n\r\n    handleCelsiusChange(temperature) {\r\n        this.setState({temperature, skala:'c'});\r\n    }\r\n    handleFahrenheitChange(temperature) {\r\n        this.setState({temperature, skala:'f'});\r\n    }\r\n    handleReamurChange(temperature) {\r\n        this.setState({temperature, skala:'r'});\r\n    }\r\n\r\n    handleKelvinChange(temperature) {\r\n        this.setState({temperature, skala:'k'});\r\n    }\r\n\r\n    render() {\r\n        const skala = this.state.skala;\r\n        const temperature = this.state.temperature;\r\n\r\n        let hasilReamur;\r\n        let hasilFahrenheit;\r\n        let hasilCelsius;\r\n        let hasilKelvin;\r\n\r\n        if(skala === 'f') {\r\n            hasilCelsius = Converter(temperature,fromFahrenheit,'c');\r\n            hasilReamur = Converter(temperature, fromFahrenheit, 'r');\r\n            hasilKelvin = Converter(temperature,fromFahrenheit, 'k');\r\n        } else if(skala === 'r') {\r\n            hasilCelsius = Converter(temperature, fromReamur, 'c');\r\n            hasilFahrenheit = Converter(temperature, fromReamur, 'f');\r\n            hasilKelvin = Converter(temperature,fromReamur, 'k');\r\n        } else if(skala === 'c') {\r\n            hasilReamur = Converter(temperature, fromCelsius, 'r');\r\n            hasilFahrenheit = Converter(temperature, fromCelsius, 'f');\r\n            hasilKelvin = Converter(temperature,fromCelsius, 'k');\r\n        }\r\n        else if(skala === 'k') {\r\n            hasilCelsius = Converter(temperature,fromKelvin, 'c');\r\n            hasilReamur = Converter(temperature, fromKelvin, 'r');\r\n            hasilFahrenheit = Converter(temperature, fromKelvin, 'f');\r\n        }\r\n        else {\r\n            hasilCelsius =  temperature;\r\n            hasilFahrenheit = temperature;\r\n            hasilReamur = temperature;\r\n            hasilKelvin = temperature;\r\n        }\r\n        \r\n        return(\r\n            <div>\r\n                <TemperatureInput skala='c' temperature={hasilCelsius} onTemperatureChange={this.handleCelsiusChange} />\r\n                <TemperatureInput skala='r' temperature={hasilReamur} onTemperatureChange={this.handleReamurChange} />\r\n                <TemperatureInput skala='f' temperature={hasilFahrenheit} onTemperatureChange={this.handleFahrenheitChange} />\r\n                <TemperatureInput skala='k' temperature={hasilKelvin} onTemperatureChange={this.handleKelvinChange} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Konversi;","export default __webpack_public_path__ + \"static/media/kimia.6cee988d.png\";","import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Konversi from './components/Konversi';\r\nimport kimia from'./img/kimia.png';\r\n\r\n\r\nfunction Main() {\r\n\r\n  return (\r\n    <main className=\"mb-5\">\r\n      <div className=\"container mb-5\"> \r\n        <h1 className=\"pt-5 mb-4 text-center\" >Konversi Suhu</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 cols-sm-12\">\r\n            <img src={kimia} alt=\"\" className=\"img-fluid\" />\r\n          </div>\r\n          <div className=\"col-md-6 col-sm-12\">\r\n          <Konversi/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/Program-Konversi-Suhu\" component={Main} />\r\n          <Redirect from=\"*\" to=\"/Program-Konversi-Suhu\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}